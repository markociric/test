/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package forms;

import controller.Controller;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.Locale;
import java.util.ResourceBundle;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import util.Roba;
import util.TableModelRoba;
import util.TableModelVrstaVozaca;
import util.VrstaVozaca;

/**
 *
 * @author Marko
 */
public class RobaForm extends javax.swing.JFrame {

    private Locale currentLocale;
    private ResourceBundle messages;

    /**
     * Creates new form VrstaVozacaForm
     */
    public RobaForm(Locale currentLocale) throws IOException {
        initComponents();
        this.currentLocale = currentLocale;
        loadLanguage();
        updateTexts();
        fillTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnDelete = new javax.swing.JButton();
        lblAddRoba = new javax.swing.JLabel();
        lblNameR = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        txtQty = new javax.swing.JTextField();
        lblQtyR = new javax.swing.JLabel();
        btnAdd = new javax.swing.JButton();
        txtQtyRoba = new javax.swing.JTextField();
        lblNewQty = new javax.swing.JLabel();
        btnUpdate = new javax.swing.JButton();
        txtUnit = new javax.swing.JTextField();
        lblMJ = new javax.swing.JLabel();
        txtPrice = new javax.swing.JTextField();
        lblJC = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        btnDelete.setText("Obriši");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        lblAddRoba.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblAddRoba.setText("Dodaj novu robu");

        lblNameR.setText("Naziv :");

        lblQtyR.setText("Količina :");

        btnAdd.setText("Dodaj");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        lblNewQty.setText("Unesi novu količinu robe :");

        btnUpdate.setText("Izmeni ");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        lblMJ.setText("Merna jedinica :");

        lblJC.setText("Jedinična cena :");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblNewQty)
                        .addGap(27, 27, 27)
                        .addComponent(txtQtyRoba, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnUpdate)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(btnDelete))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(94, 94, 94)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(lblMJ)
                                                .addGap(18, 18, 18)
                                                .addComponent(txtUnit, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(lblNameR)
                                                    .addComponent(lblQtyR))
                                                .addGap(18, 18, 18)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(txtQty, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(lblJC)
                                                .addGap(18, 18, 18)
                                                .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                .addGap(0, 72, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(lblAddRoba)
                                        .addGap(160, 160, 160))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(btnAdd)
                                        .addGap(185, 185, 185))))))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnDelete)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(39, 39, 39)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(25, 25, 25)
                            .addComponent(lblAddRoba)
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblNameR)
                                .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblQtyR)
                                .addComponent(txtQty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(7, 7, 7)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblMJ)
                                .addComponent(txtUnit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblJC)
                                .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(19, 19, 19)
                            .addComponent(btnAdd))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtQtyRoba, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUpdate)
                    .addComponent(lblNewQty))
                .addGap(24, 24, 24))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        try {
            int selectedRow = jTable1.getSelectedRow();

            if (selectedRow == -1) {
                switch (currentLocale.getLanguage()) {
                    case "sr" ->
                        JOptionPane.showMessageDialog(this, "Morate da izaberete neko polje", "Greška!", JOptionPane.ERROR_MESSAGE);
                    case "sr_cir" ->
                        JOptionPane.showMessageDialog(this, "Морате да изаберете неко поље", "Грешка!", JOptionPane.ERROR_MESSAGE);
                    default ->
                        JOptionPane.showMessageDialog(this, "You must select a field", "Error!", JOptionPane.ERROR_MESSAGE);
                }
                return;
            }
            List<Roba> list = Controller.getInstance().getListRoba();
            int delete = list.get(selectedRow).getIdRoba();
            boolean result = Controller.getInstance().deleteRoba(delete);

            if (result) {
                switch (currentLocale.getLanguage()) {
                    case "sr" ->
                        JOptionPane.showMessageDialog(this, "Uspešno izbrisana vrsta robe");
                    case "sr_cir" ->
                        JOptionPane.showMessageDialog(this, "Успешно избрисана врста робе");
                    default ->
                        JOptionPane.showMessageDialog(this, "Type of goods deleted successfully");
                }

            } else {
                switch (currentLocale.getLanguage()) {
                    case "sr" ->
                        JOptionPane.showMessageDialog(this, "Greška pri brisanju iz baze", "Greška!", JOptionPane.ERROR_MESSAGE);
                    case "sr_cir" ->
                        JOptionPane.showMessageDialog(this, "Грешка при брисању из базе", "Грешка!", JOptionPane.ERROR_MESSAGE);
                    default ->
                        JOptionPane.showMessageDialog(this, "Error deleting from database", "Error!", JOptionPane.ERROR_MESSAGE);
                }
            }
            fillTable();
        } catch (IOException ex) {
            Logger.getLogger(RobaForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        String name = txtName.getText().trim();
        try {
            double qty = Double.parseDouble(txtQty.getText().trim());
            double price = Double.parseDouble(txtPrice.getText().trim());
            String unit = txtUnit.getText().trim();
            Roba param = new Roba(-1, name, qty, unit, price);
            boolean result = Controller.getInstance().insertRoba(param);
            if (result) {
                switch (currentLocale.getLanguage()) {
                                case "sr" ->
                                    JOptionPane.showMessageDialog(this, "Uspešno sačuvane promene");
                                case "sr_cir" ->
                                    JOptionPane.showMessageDialog(this, "Успешно сачуване промене");
                                default ->
                                    JOptionPane.showMessageDialog(this, "Changes saved successfully");
                            }
                fillTable();

            } else {
                switch (currentLocale.getLanguage()) {
                                case "sr" ->
                                    JOptionPane.showMessageDialog(this, "Greška pri čuvanju izmena u bazi", "Greška!", JOptionPane.ERROR_MESSAGE);
                                case "sr_cir" ->
                                    JOptionPane.showMessageDialog(this, "Грешка при чувању измена у бази", "Грешка!", JOptionPane.ERROR_MESSAGE);
                                default ->
                                    JOptionPane.showMessageDialog(this, "Error saving in database", "Error!", JOptionPane.ERROR_MESSAGE);
                            }
            }
        } catch (Exception e) {
            switch (currentLocale.getLanguage()) {
                case "sr" ->
                    JOptionPane.showMessageDialog(null, "Molimo unesite validan broj.", "Greška!", JOptionPane.ERROR_MESSAGE);

                case "sr_cir" ->
                    JOptionPane.showMessageDialog(null, "Молимо унесите валидан број.", "Грешка!", JOptionPane.ERROR_MESSAGE);

                default ->
                    JOptionPane.showMessageDialog(null, "Please enter a valid number.", "Error!", JOptionPane.ERROR_MESSAGE);

            }
        }

    }//GEN-LAST:event_btnAddActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        int selectedRow = jTable1.getSelectedRow();

        if (selectedRow == -1) {
           switch (currentLocale.getLanguage()) {
                    case "sr" ->
                        JOptionPane.showMessageDialog(this, "Morate da izaberete neko polje", "Greška!", JOptionPane.ERROR_MESSAGE);
                    case "sr_cir" ->
                        JOptionPane.showMessageDialog(this, "Морате да изаберете неко поље", "Грешка!", JOptionPane.ERROR_MESSAGE);
                    default ->
                        JOptionPane.showMessageDialog(this, "You must select a field", "Error!", JOptionPane.ERROR_MESSAGE);
                }
            return;
        }
        try {
            double qty = Double.parseDouble(txtQtyRoba.getText().trim());
            int updateId = Controller.getInstance().getListRoba().get(selectedRow).getIdRoba();
            Roba param = new Roba(updateId, null, qty, null, -1);
            boolean result = Controller.getInstance().updateRoba(param);
            if (result) {
                 switch (currentLocale.getLanguage()) {
                                case "sr" ->
                                    JOptionPane.showMessageDialog(this, "Uspešno sačuvane promene");
                                case "sr_cir" ->
                                    JOptionPane.showMessageDialog(this, "Успешно сачуване промене");
                                default ->
                                    JOptionPane.showMessageDialog(this, "Changes saved successfully");
                            }
                fillTable();

            } else {
                switch (currentLocale.getLanguage()) {
                                case "sr" ->
                                    JOptionPane.showMessageDialog(this, "Greška pri čuvanju izmena u bazi", "Greška!", JOptionPane.ERROR_MESSAGE);
                                case "sr_cir" ->
                                    JOptionPane.showMessageDialog(this, "Грешка при чувању измена у бази", "Грешка!", JOptionPane.ERROR_MESSAGE);
                                default ->
                                    JOptionPane.showMessageDialog(this, "Error saving in database", "Error!", JOptionPane.ERROR_MESSAGE);
                            }
            }
        } catch (Exception e) {
            switch (currentLocale.getLanguage()) {
                case "sr" ->
                    JOptionPane.showMessageDialog(null, "Molimo unesite validan broj.", "Greška!", JOptionPane.ERROR_MESSAGE);

                case "sr_cir" ->
                    JOptionPane.showMessageDialog(null, "Молимо унесите валидан број.", "Грешка!", JOptionPane.ERROR_MESSAGE);

                default ->
                    JOptionPane.showMessageDialog(null, "Please enter a valid number.", "Error!", JOptionPane.ERROR_MESSAGE);

            }
        }


    }//GEN-LAST:event_btnUpdateActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblAddRoba;
    private javax.swing.JLabel lblJC;
    private javax.swing.JLabel lblMJ;
    private javax.swing.JLabel lblNameR;
    private javax.swing.JLabel lblNewQty;
    private javax.swing.JLabel lblQtyR;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPrice;
    private javax.swing.JTextField txtQty;
    private javax.swing.JTextField txtQtyRoba;
    private javax.swing.JTextField txtUnit;
    // End of variables declaration//GEN-END:variables

    private void fillTable() throws IOException {
        TableModelRoba modelRoba = new TableModelRoba(Controller.getInstance().getListRoba());
        jTable1.setModel(modelRoba);
    }
    public void loadLanguage() {
        try {
            messages = ResourceBundle.getBundle("translate.messages", currentLocale);
        } catch (Exception e) {
            System.err.println("Greška pri učitavanju jezika: " + e.getMessage());
        }
    }

   
    public void updateTexts() {
         lblAddRoba.setText(messages.getString("lblAddRoba.text"));
         lblJC.setText(messages.getString("lblJC.text"));
         lblMJ.setText(messages.getString("lblMJ.text"));
         lblNameR.setText(messages.getString("lblNameR.text"));
         lblNewQty.setText(messages.getString("lblNewQty.text"));
         lblQtyR.setText(messages.getString("lblQtyR.text"));
         btnAdd.setText(messages.getString("btnAdd.text"));
         btnDelete.setText(messages.getString("btnDeleteV.text"));
         btnUpdate.setText(messages.getString("btnUpdateV.text"));
         
    }
}
